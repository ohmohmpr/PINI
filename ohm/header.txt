TopicInfo(msgtype='sensor_msgs/msg/Imu', 
msgdef='# This is a message to hold data from an IMU (Inertial Measurement Unit)
\n#
\n# 
Accelerations should be in m/s^2 (not in g\'s), 
and rotational velocity should be in rad/sec
\n#
\n# 
If the covariance of the measurement is known, 
it should be filled in (if all you know is the 
\n# variance of each measurement, e.g. from the datasheet, just put those along the diagonal)
\n# A covariance matrix of all zeros will be interpreted as "covariance unknown", and to use the
\n# data a covariance will have to be assumed or gotten from some other source
\n#
\n# If you have no estimate for one of the data elements (e.g. your IMU doesn\'t produce an orientation 
\n# estimate), please set element 0 of the associated covariance matrix to -1
n# If you are interpreting this message, please check for a value of -1 in the first element of each 
\n# covariance matrix, and disregard the associated estimate.
\n
\nHeader header
\n
\ngeometry_msgs/Quaternion orientation
\nfloat64[9] orientation_covariance # Row major about x, y, z axes
\n
\ngeometry_msgs/Vector3 angular_velocity
\nfloat64[9] angular_velocity_covariance # Row major about x, y, z axes
\n
\ngeometry_msgs/Vector3 linear_acceleration
\nfloat64[9] linear_acceleration_covariance # Row major x, y z 
\n
\n================================================================================
\nMSG: std_msgs/Header
\n# Standard metadata for higher-level stamped data types.
\n# This is generally used to communicate timestamped data 
\n# in a particular coordinate frame.
\n# 
\n# sequence ID: consecutively increasing ID 
\nuint32 seq
\n#Two-integer timestamp that is expressed as:
\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called \'secs\')
\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called \'nsecs\')
\n# time-handling sugar is provided by the client library
\ntime stamp
\n#Frame this data is associated with
\nstring frame_id
\n
\n================================================================================
\nMSG: geometry_msgs/Quaternion
\n# This represents an orientation in free space in quaternion form.
\n
\nfloat64 x
\nfloat64 y
\nfloat64 z
\nfloat64 w
\n
\n================================================================================
\nMSG: geometry_msgs/Vector3
\n# This represents a vector in free space. 
\n# It is only meant to represent a direction. Therefore, it does not
\n# make sense to apply a translation to it (e.g., when applying a 
\n# generic rigid transformation to a Vector3, tf2 will only apply the
\n# rotation). If you want your data to be translatable too, use the
\n# geometry_msgs/Point message instead.
\n
\nfloat64 x
\nfloat64 y
\nfloat64 z', msgcount=51305, connections=[Connection(id=3, 
topic='/handsfree/imu', msgtype='sensor_msgs/msg/Imu', 
msgdef='# This is a message to hold data from an IMU (Inertial Measurement Unit)
\n#
\n# Accelerations should be in m/s^2 (not in g\'s), and rotational velocity should be in rad/sec
\n#
\n# If the covariance of the measurement is known, it should be filled in (if all you know is the 
\n# variance of each measurement, e.g. from the datasheet, just put those along the diagonal)
\n# A covariance matrix of all zeros will be interpreted as "covariance unknown", and to use the
\n# data a covariance will have to be assumed or gotten from some other source
\n#
\n# If you have no estimate for one of the data elements (e.g. your IMU doesn\'t produce an orientation 
\n# estimate), please set element 0 of the associated covariance matrix to -1
\n# If you are interpreting this message, please check for a value of -1 in the first element of each 
\n# covariance matrix, and disregard the associated estimate.
\n
\nHeader header
\n
\ngeometry_msgs/Quaternion orientation
\nfloat64[9] orientation_covariance # Row major about x, y, z axes
\n
\ngeometry_msgs/Vector3 angular_velocity
\nfloat64[9] angular_velocity_covariance # Row major about x, y, z axes
\n
\ngeometry_msgs/Vector3 linear_acceleration
\nfloat64[9] linear_acceleration_covariance # Row major x, y z 
\n
\n================================================================================
\nMSG: std_msgs/Header
\n# Standard metadata for higher-level stamped data types.
\n# This is generally used to communicate timestamped data 
\n# in a particular coordinate frame.
\n# 
\n# sequence ID: consecutively increasing ID 
\nuint32 seq
\n#Two-integer timestamp that is expressed as:
\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called \'secs\')
\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called \'nsecs\')
\n# time-handling sugar is provided by the client library
\ntime stamp
\n#Frame this data is associated with
\nstring frame_id
\n
\n================================================================================
\nMSG: geometry_msgs/Quaternion
\n# This represents an orientation in free space in quaternion form.
\n
\nfloat64 x
\nfloat64 y
\nfloat64 z
\nfloat64 w
\n
\n================================================================================
\nMSG: geometry_msgs/Vector3
\n# This represents a vector in free space. 
\n# It is only meant to represent a direction. Therefore, it does not
\n# make sense to apply a translation to it (e.g., when applying a 
\n# generic rigid transformation to a Vector3, tf2 will only apply the
\n# rotation). If you want your data to be translatable too, use the
\n# geometry_msgs/Point message instead.
\n
\nfloat64 x
\nfloat64 y
\nfloat64 z', digest='6a62c6daae103f4ff57a132d6f95cec2', msgcount=51305, 
ext=ConnectionExtRosbag1(callerid='/imu', latching=0), 
owner=<rosbags.rosbag1.reader.Reader object at 0x70b6765e82b0>)])